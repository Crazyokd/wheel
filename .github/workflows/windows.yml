name: Windows

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '**/*.c'
      - '**/*.h'
      - '.github/workflows/windows.yml'
      - 'Makefile'
      - 'assets/**'
  pull_request:
    branches: [main]
    paths:
      - '**/*.c'
      - '**/*.h'
      - '.github/workflows/windows.yml'
      - 'Makefile'
      - 'assets/**'
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: write       # for actions/upload-release-asset to upload release asset
    runs-on: windows-latest

    env:
      PROJECT_RELEASE_PATH: ${{ github.event.repository.name }}_dev_win_x64

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          make
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-just
          mingw-w64-ucrt-x86_64-raylib
          pkgconf
          unzip

    - name: Checkout this repo
      uses: actions/checkout@master

    - name: Setup Release Paths
      run: |
        echo "PROJECT_RELEASE_PATH=${{ env.PROJECT_NAME }}_v${{ github.event.release.tag_name }}_win_x64" >> "$GITHUB_ENV"
      if: github.event_name == 'release' && github.event.action == 'published'

    - name: Build Product
      run: |
        export PATH="/ucrt64/bin:$PATH" PKG_CONFIG_PATH=/ucrt64/lib/pkgconfig
        cc --version
        make -B -j "$(nproc)"

    - name: Run tests
      run: |
        # FIXME: these tests only fail on Windows
        rm tests/float.c
        ls tests
        just test

    - name: Generate Artifacts
      run: |
        mkdir ${{ env.PROJECT_RELEASE_PATH }}
        make PREFIX=${{ env.PROJECT_RELEASE_PATH }} install
        7z a .\${{ env.PROJECT_RELEASE_PATH }}.zip .\${{ env.PROJECT_RELEASE_PATH }}
      shell: cmd

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_RELEASE_PATH }}.zip
        path: ./${{ env.PROJECT_RELEASE_PATH }}.zip

    - name: Upload Artifact to Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.PROJECT_RELEASE_PATH }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'release' && github.event.action == 'published'
